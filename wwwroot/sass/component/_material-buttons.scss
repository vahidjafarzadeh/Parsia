@import "../abstract/mixins";
@import "../abstract/colors";

.btn {
  &.material {
    border: none;
    outline: none;
    text-align: center;
    @include boxShadow(0 3px 16px -2px rgba(227, 227, 227, 0.69), 0 2px 10px 0 rgba(186, 186, 186, 0.2) !important);
    @include transition(.25s ease-in-out);

    &:focus {
      &:not(.outline) {
        border: none;
      }

      outline: none;
      @include boxShadow(0 3px 8px -2px rgba(146, 146, 146, 0.2), 0 2px 10px 0 rgba(63, 63, 63, 0.17) !important);
    }

    &:not(:disabled):hover {
      &:not(.outline) {
        border: none;
      }

      outline: none;
      @include boxShadow(0 8px 12px -4px rgba(146, 146, 146, 0.15), 0 6px 15px -3px rgba(93, 93, 93, 0.2) !important);
    }

    &:not(.outline) {
      &.blue {
        background-color: map_get($blue, 'accent-3');
        color: white;
      }

      &.indigo {
        background-color: map_get($indigo, 'accent-3');
        color: white;
      }

      &.violet {
        background-color: map_get($deep-purple, 'accent-2');
        color: white;
      }

      &.purple {
        background-color: map_get($purple, 'accent-2');
        color: white;
      }

      &.deep-purple {
        background-color: map_get($deep-purple, 'accent-3');
        color: white;
      }

      &.orange {
        background-color: map_get($amber, 'darken-4');
        color: white;
      }

      &.success {
        background-color: map_get($success, 'light');
        color: white;
      }

      &.danger {
        background-color: map_get($danger, 'base');
        color: white;
      }

      &.warning {
        background-color: map_get($warning, 'base');
        color: white;
      }

      &.blue-grey {
        background-color: map_get($blue-grey, 'darken-2');
        color: white
      }

      &.persian-green {
        background-color: #43c8ba;
        color: white
      }
    }

    &.outline {
      background-color: transparent;
      border: 2px solid;

      &.blue {
        border-color: map_get($blue, 'accent-3');
        color: map_get($blue, 'accent-3');
      }

      &.indigo {
        border-color: map_get($indigo, 'accent-3');
        color: map_get($indigo, 'accent-3');
      }

      &.violet {
        border-color: map_get($deep-purple, 'accent-2');
        color: map_get($deep-purple, 'accent-2');
      }

      &.purple {
        border-color: map_get($purple, 'accent-2');
        color: map_get($purple, 'accent-2');
      }

      &.deep-purple {
        border-color: map_get($deep-purple, 'accent-3');
        color: map_get($deep-purple, 'accent-3');
      }

      &.orange {
        border-color: map_get($amber, 'darken-4');
        color: map_get($amber, 'darken-4');
      }

      &.success {
        border-color: map_get($success, 'light');
        color: map_get($success, 'light');
      }

      &.danger {
        border-color: map_get($danger, 'base');
        color: map_get($danger, 'base');
      }

      &.warning {
        border-color: map_get($warning, 'base');
        color: map_get($warning, 'base');
      }

      &.blue-grey {
        border-color: map_get($blue-grey, 'darken-2');
        color: map_get($blue-grey, 'darken-2');
      }

      &.persian-green {
        border-color: #43c8ba;
        color: #43c8ba;
      }
    }
  }

  &.loading, &.finished, &.failed {
    position: relative;

    &::after {
      position: absolute;
      width: 20px;
      height: 20px;
      right: calc(20% - 5px);
      top: calc(50% - 8px);
      content: '';
      background: url('data:image/svg+xml;utf8,<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="sync-alt" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-sync-alt fa-w-16"><path fill="white" d="M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z" class=""></path></svg>');
      @include animation(buttonLoading 500ms linear infinite);
    }
  }

  &.finished {
    &::after {
      background: url('data:image/svg+xml;utf8,<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="check" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-check fa-w-16 text-light" ><path fill="white" d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z" class=""></path></svg>');
      @include animation(buttonScale .5s linear);
    }
  }

  &.failed {
    &::after {
      background: url('data:image/svg+xml;utf8,<svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="times" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 352 512" class="svg-inline--fa fa-times fa-w-11 fa-3x"><path fill="white" d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z" class=""></path></svg>') no-repeat;
      margin: -2px 0 0 0;
      @include animation(buttonScale .5s linear);
    }
  }

}

@include keyframes(buttonLoading) {
  100% {
    @include transform(rotate(360deg));
  }
}

@include keyframes(buttonScale) {
  0% {
    @include transform(scale(10));
  }
  50% {
    @include transform(scale(.2));
  }
  70% {
    @include transform(scale(1.2));
  }
  90% {
    @include transform(scale(.7));
  }
  100% {
    @include transform(scale(1));
  }
}
